=================================================================

In a post from October 24, I said that the moving sofa problem had not been solved yet. Just as a reminder, the problem concerns the two-dimensional shape with the largest area that can slide through an L-shaped corridor of unit width. Well, now the problem might have been solved in some recent papers by Zhipeng Deng and Jineon Baek, who claim to have proved that Gerver's sofa is indeed optimal. They also claim that the best ambidextrous sofa, also known as Romik's car, is optimal as well.

The ambidextrous sofa follows the same idea as the original sofa problem, but this time we want the sofa to be able to make turns in both directions. That is, it should be able to slide through left and right corners. This obviously constrains the shape further. Dan Romik found a very good shape in 2017, whose area is reduced to 1.64496... and is now believed to be the optimal one. In this case, the sofa looks like a pair of sunglasses. In this post you can see a shape that has been found by a neural network, closely resembling Romik's solution.

Do it yourself! Source code: https://github.com/raimonluna/MathIsBeautiful/blob/main/MIB_2024/MIB_2024_12/MIB0023_AmbidextrousSofa.py

=================================================================

Romanesco broccoli is a really cool variety of cauliflower (Brassica oleracea var. botrytis) which has a remarkable fractal shape.It is also quite good to eat! As any cauliflower, it is an inflorescence, but in this case its meristems are neatly arranged in logarithmic spirals around its axis. In a similar way as sunflowers, the number of such spirals is usually a Fibonacci number. 

Some time ago I decided to work on a mathematical generation of its shape, as a 3D analogy of the Barnsley fern, in a YouTube mathematical video. In this case, the shape is generated by repeatedly applying 14 linear transformations to a cloud of 100.000 random points. The first one is a rescaling towards upper rows of the broccoli, while the other 13 correspond to the 13 meristem spirals.

Do it yourself! Source code: https://github.com/raimonluna/MathIsBeautiful/blob/main/MIB_2024/MIB_2024_12/MIB0024_RomanescoFractal.py

=================================================================

MoirÃ© patterns appear whenever two periodic lattices overlap. They get their name from a type of cloth, but you can see them everywhere: When looking through a double fence on the street, when taking a digital picture of a screen, and of course when two layers of transparent cloth overlap. 

This effect comes from the addition of slightly different frequencies. In image and signal processing, it is called aliasing and is usually a nightmare to deal with. In acoustics, it is known as beating, and appears when two nearby notes sound together.

Do it yourself! Source code: https://github.com/raimonluna/MathIsBeautiful/blob/main/MIB_2024/MIB_2024_12/MIB0025_MoirePatterns.py

=================================================================

I like to call this one the Balrog Fractal, for obvious reasons. This foe is beyond any of you, run! 

This is yet another variant of the Mandelbrot set, but in this case the iterated function is z --> cos(z) - i/c. Here we inverted the complex plane of c, and we rotated it 90 degrees for it to look more like one of J. R. R. Tolkien's demonic monsters. In the central region of the fractal, z only needs a few iterations to diverge. This is why the balrog has discrete jumps in color, resembling some diabolic flowers.

Do it yourself! Source code: https://github.com/raimonluna/MathIsBeautiful/blob/main/MIB_2024/MIB_2024_12/MIB0026_BalrogFractal.py


=================================================================





